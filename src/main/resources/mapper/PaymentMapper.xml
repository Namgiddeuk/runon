<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.finalproject.dao.PaymentDAO">
    <select id="selectPayment">
        select count(payment_code) from payment_tbl where usercode=#{usercode} and is_completed=0
    </select>
    <insert id="createPayment">
        insert into payment_tbl (usercode,total_amount) values(#{usercode},#{total_amount})
    </insert>
    <update id="updatePayment">
        update payment_tbl set total_amount=#{total_amount} where usercode=#{usercode} and is_completed=0
    </update>
    <select id="selectOrdercode" >
        SELECT order_code ,total_amount
        FROM order_tbl
        WHERE cart_code IN
        <foreach item="cart_code" collection="cart_codes" open="(" separator="," close=")">
            #{cart_code}
        </foreach>
        and usercode=#{param2} and order_status=0 and is_deleted=0
    </select>
    <select id="selectPaymentCode">
        select payment_code from payment_tbl where usercode=#{param1} and is_completed=0
    </select>
    <select id="selectDetails" parameterType="java.util.List" resultType="PaymentdetailVO">
        SELECT order_code, total_amount, payment_code, orderId
        FROM payment_detail_tbl
        WHERE is_deleted=0 and
        <foreach item="paymentDetail" collection="list" separator=" OR ">
             (order_code = #{paymentDetail.order_code}
            AND payment_code = #{paymentDetail.payment_code}
            )
        </foreach>
    </select>

    <insert id="insertPaymentDetails" parameterType="java.util.List">
        INSERT INTO payment_detail_tbl (order_code, total_amount, payment_code, orderId)
        VALUES
        <foreach item="newDetails" collection="list" separator=",">
            (#{newDetails.order_code}, #{newDetails.total_amount}, #{newDetails.payment_code}, #{newDetails.orderId})
        </foreach>
    </insert>
    <update id="updateToDeleted" parameterType="java.util.List">
        UPDATE payment_detail_tbl
        SET is_deleted = 1,deleted_date=now()
        WHERE status=0 and
        <foreach item="paymentDetail" collection="list" separator=" OR ">
            (order_code = #{paymentDetail.order_code}
            AND payment_code = #{paymentDetail.payment_code}
            AND orderId = #{paymentDetail.orderId})
        </foreach>
    </update>
    <update id="updateDetails">
        UPDATE payment_detail_tbl pd
        JOIN payment_tbl p ON pd.payment_code = p.payment_code
        SET pd.status = 1
        WHERE pd.orderId = #{param1}
        AND p.usercode = #{param2}
        AND p.is_completed = 0;

    </update>
    <select id="selectCartCode">
        select cart_code from order_tbl where usercode=#{param1} and order_status=0 and is_deleted=0
    </select>
    <update id="updatepayments">
        update payment_tbl set is_completed=1 ,completed_date=now(),real_amount=#{param1},
        payment_method=#{param3} ,discount_amount=total_amount-#{param1},paymentKey=#{paymentKey}
        where usercode=#{param2}
        and is_completed=0
    </update>
    <update id="updateOrder">
        update order_tbl set order_status=1 where usercode=#{usercode} and is_deleted=0
    </update>

    <update id="deletedCart_code">
        UPDATE cart_tbl
        SET is_deleted = 1,
        deleted_date = NOW()
        <choose>
            <!-- cart_code가 하나일 경우 -->
            <when test="cart_codes != null and cart_codes.size() ==1">
                WHERE cart_code = #{cart_codes[0]}
            </when>
            <!-- cart_code가 여러 개일 경우 -->
            <otherwise>
                WHERE cart_code IN
                <foreach item="cart_code" collection="cart_codes" open="(" separator="," close=")">
                    #{cart_code}
                </foreach>
            </otherwise>
        </choose>
    </update>
    <select id="selectCvoList" resultType="com.ict.finalproject.vo.CompleteVO">
        SELECT
        pd.payment_detail_id,
        pd.orderId,
        pd.total_amount AS amount,
        o.total_amount AS total_amount,
        p.discount_amount,
        p.real_amount,
        p.paymentKey,
        m.marathon_name,
        m.poster_img as poster_img,
        pd.status,
        pd.created_date AS create_time
        FROM payment_detail_tbl pd
        JOIN order_tbl o ON pd.order_code = o.order_code
        JOIN payment_tbl p ON pd.payment_code = p.payment_code
        JOIN marathon_list_tbl m ON o.marathon_code = m.marathon_code
        WHERE pd.orderId = #{param1};
    </select>
    <select id="selectdiscount" resultType="com.ict.finalproject.vo.PaymentVO">
        SELECT discount_amount, real_amount,usercode
        FROM payment_tbl
        WHERE payment_code = (
        SELECT payment_code
        FROM payment_detail_tbl
        WHERE orderId = #{param1}
        LIMIT 1
        ) and usercode = #{param2}
    </select>
    <update id="updateMypoint">
        UPDATE point_tbl
        SET mypoint = mypoint - #{discount_amount}
        WHERE usercode = #{usercode}
    </update>
    <update id="updateChangePoint">
        INSERT INTO point_change_tbl (point_code, point_change, point_change_date)
        SELECT p.point_code, (-1) * #{discount_amount}, NOW()
        FROM point_tbl p
        WHERE p.usercode = #{usercode};
    </update>
    <select id="getPDVO" resultType="com.ict.finalproject.vo.CompleteVO">
        SELECT
        pd.payment_detail_id,
        pd.orderId,
        pd.total_amount AS amount,
        o.total_amount AS total_amount,
        p.discount_amount,
        p.real_amount,
        p.paymentKey,
        m.marathon_name,
        m.poster_img as poster_img,
        pd.status,
        pd.created_date AS create_time
        FROM payment_detail_tbl pd
        JOIN order_tbl o ON pd.order_code = o.order_code
        JOIN payment_tbl p ON pd.payment_code = p.payment_code
        JOIN marathon_list_tbl m ON o.marathon_code = m.marathon_code
        where status=1 and payment_detail_id in
        <foreach item="codes" collection="list" open="(" separator="," close=")">
            #{codes}
        </foreach>
    </select>
    <insert id="insertRefund">
        insert into refund_tbl (refund_request_date,reason,usercode,refund_amount,paymentKey,refund_point)
            values(now(),#{reason},(select usercode from payment_tbl where paymentKey= #{paymentKey}),
            #{refund_amount},#{paymentKey},#{return_discount})
    </insert>
    <update id="updatepayDetail">
        update payment_detail_tbl set status=2  where status=1 and payment_detail_id in
        <foreach item="order_codes" collection="order_codes" open="(" separator="," close=")">
            #{order_codes}
        </foreach>
    </update>
    <update id="updatePay">
        update payment_tbl set payment_status=2, refund_amount=refund_amount where is_completed=1 and paymentKey=#{paymentKey}
    </update>
    <select id="selectorderCodes" resultType="Integer">
        select order_code from payment_detail_tbl where payment_detail_id in
        <foreach item="order_codes" collection="order_codes" open="(" separator="," close=")">
            #{order_codes}
        </foreach>
    </select>
    <update id="updateOrderstatus">
        update order_tbl set order_status=2 where order_code in
        <foreach item="order_codes" collection="order_codes" open="(" separator="," close=")">
            #{order_codes}
        </foreach>
    </update>
    <update id="updatePoint">
        update point_tbl set mypoint= mypoint+${return_discount} where usercode=(select usercode from payment_tbl where paymentKey=CAST(#{paymentKey} AS CHAR))
    </update>
    <insert id="insertPoint">
        insert into point_change_tbl (point_change,point_code) values((#{return_discount}),(select point_code from point_tbl where usercode=(select usercode from payment_tbl where paymentKey=CAST(#{paymentKey} AS CHAR))))
    </insert>


</mapper>
